<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.transport.dao.CompanyInfoMapper" >
    <resultMap id="BaseResultMap" type="com.transport.pojo.CompanyInfo" >
        <id column="company_id" property="companyId" jdbcType="INTEGER" />
        <result column="Customer" property="customer" jdbcType="INTEGER" />
        <result column="company_Name" property="companyName" jdbcType="VARCHAR" />
        <result column="Create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="Creator" property="creator" jdbcType="INTEGER" />
        <result column="company_address" property="companyAddress" jdbcType="VARCHAR" />
        <result column="company_type" property="companyType" jdbcType="INTEGER" />
        <result column="accommodate_quantity" property="accommodateQuantity" jdbcType="DOUBLE" />
        <result column="Current_volume" property="currentVolume" jdbcType="DOUBLE" />
        <result column="Reminder_volume" property="reminderVolume" jdbcType="DOUBLE" />
        <result column="status" property="status" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        company_id, Customer, company_Name, Create_time, Creator, company_address, company_type, 
        accommodate_quantity, Current_volume, Reminder_volume, status
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from t_company_info
        where company_id = #{companyId,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.transport.pojo.CompanyInfo" >
        insert into t_company_info (company_id, Customer, company_Name, 
            Create_time, Creator, company_address, 
            company_type, accommodate_quantity, Current_volume, 
            Reminder_volume, status)
        values (#{companyId,jdbcType=INTEGER}, #{customer,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, 
            #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=INTEGER}, #{companyAddress,jdbcType=VARCHAR}, 
            #{companyType,jdbcType=INTEGER}, #{accommodateQuantity,jdbcType=DOUBLE}, #{currentVolume,jdbcType=DOUBLE}, 
            #{reminderVolume,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.transport.pojo.CompanyInfo" >
        update t_company_info
        <set >
            <if test="customer != null" >
                Customer = #{customer,jdbcType=INTEGER},
            </if>
            <if test="companyName != null" >
                company_Name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                Create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null" >
                Creator = #{creator,jdbcType=INTEGER},
            </if>
            <if test="companyAddress != null" >
                company_address = #{companyAddress,jdbcType=VARCHAR},
            </if>
            <if test="companyType != null" >
                company_type = #{companyType,jdbcType=INTEGER},
            </if>
            <if test="accommodateQuantity != null" >
                accommodate_quantity = #{accommodateQuantity,jdbcType=DOUBLE},
            </if>
            <if test="currentVolume != null" >
                Current_volume = #{currentVolume,jdbcType=DOUBLE},
            </if>
            <if test="reminderVolume != null" >
                Reminder_volume = #{reminderVolume,jdbcType=DOUBLE},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where company_id = #{companyId,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_company_info
        where company_id = #{companyId,jdbcType=INTEGER}
    </delete>

</mapper>